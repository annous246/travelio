const db=require('mongoose')
require('dotenv').config()

db.connect(process.env.DB_KEY)
.then(()=>{console.log("connected to database")})
.catch(()=>{console.log("error connecting to database")})

const roomSchema=new db.Schema({
    
    price:{
        type:Number,
        required:true,
        default:0},
    status:{
        type:Boolean,
        required:true,
        default:false},
        units:{
            type:Number,
            required:true,
            default:0}

})
const bookingSchema=new db.Schema({
    id:{
        type:String,
        required:true,
        default:""
    },
     hotelId:{
        type:String,
        required:true,
        default:""
    },
    status:{
        type:Number,
        required:true,
        default:0
    },
    members:{
       type:Object,
       required:true,
       default:{
        adults:{
            type:Number,
            required:true,
            default:1
        },
        babies:{
            type:Number,
            required:true,
            default:0
        },
        children:{
            type:Number,
            required:true,
            default:0
        },
       }
   },
   accomodation:{
    type:String,
    required:true,
    default:"LS"

   },
   commission:{
    type:Number,
    required:true,
    default:1

   },
   totalPrice:{
    type:String,
    required:true,
    default:"0.0"

   },
   totalSupp:{
    type:String,
    required:true,
    default:"0.0"

   },
   reduction:{
    type:String,
    required:true,
    default:"0.0"

   },
   bookedRooms:{
    type:Object,
    required:true,
    default:{
        singleRoom:{
            type:roomSchema,
            required:true,
            default:{
                price:0,
                units:0,
                status:false
            }
        },
        doubleRoom:{
            type:roomSchema,
            required:true,
            default:{
                price:0,
                units:0,
                status:false
            }
        },
        tripleRoom:{
            type:roomSchema,
            required:true,
            default:{
                price:0,
                units:0,
                status:false
            }
        },
        quadrupleRoom:{
            type:roomSchema,
            required:true,
            default:{
                price:0,
                units:0,
                status:false
            }
        },
        FamilyRoom:{
            type:roomSchema,
            required:true,
            default:{
                price:0,
                units:0,
                status:false
            }
        },
    }

   },
   data:{
    type:Object,
    required:true,
    defualt:{}
   },
   preferences:{
    type:Object,
    required:true,
    defualt:{}
   },
   date:{
    type:Number,
    required:true,
    default:0
   },
   checkIn:{
    type:String,
    required:true,
    default:''
   },
   checkOut:{
    type:String,
    required:true,
    default:''
   }


})
const accomodationSchema=new db.Schema({
    
    price:{
        type:Number,
        required:true,
        default:0}

})

const seasonSchema=new db.Schema({
    
    from:{
        type:String,
        required:true,
        default:""}
        ,
    to:{
        type:String,
        required:true,
        default:""}
        ,
        LO:{
            type:accomodationSchema,
            required:true,
            default:{
                price:0,
                
            }
        },LPD:{
            type:accomodationSchema,
            required:true,
            default:{
                price:0,
                
            }
        },DP:{
            type:accomodationSchema,
            required:true,
            default:{
                price:0,
                
            }
        },PC:{
            type:accomodationSchema,
            required:true,
            default:{
                price:0,
                
            }
        },ALLIN:{
            type:accomodationSchema,
            required:true,
            default:{
                price:0,
                
            }
        },ALLINSOFT:{
            type:accomodationSchema,
            required:true,
            default:{
                price:0,
                
            }
        },DPP:{
            type:accomodationSchema,
            required:true,
            default:{
                price:0,
                
            }
        },PCP:{
            type:accomodationSchema,
            required:true,
            default:{
                price:0,
                
            }
        },
        LOStatus:{
            type:Boolean,
            required:true,
            default:false
        },
        LPDStatus:{
            type:Boolean,
            required:true,
            default:false
        },
        DPStatus:{
            type:Boolean,
            required:true,
            default:false
        },
        PCStatus:{
            type:Boolean,
            required:true,
            default:false
        },
        PCPStatus:{
            type:Boolean,
            required:true,
            default:false
        },
        DPPStatus:{
            type:Boolean,
            required:true,
            default:false
        },
        ALLINStatus:{
            type:Boolean,
            required:true,
            default:false
        },
        ALLINSOFTStatus:{
            type:Boolean,
            required:true,
            default:false
        },

})


const clientSchema=new db.Schema({
    email:{
        type:String,
        required:true,
        default:""
    },  
    ratings:{
        type:[String],
        required:true,
        default:[]
    },
    password:{
        type:String,
        required:true,
        default:""
    },
    firstName:{
        type:String,
        required:true,
        default:""
    }, 
    lastName:{
        type:String,
        required:true,
        default:""
    }, 
    age:{
        type:Number,
        required:true,
        default:18
    },
      nationality:{
        type:String,
        required:false,
        default:""
    },
    adminState:{
      type:Boolean,
      required:true,
      default:false
  },
  reservations:{
    type:[bookingSchema],
    required:true,
    default:[]
},
})

const hotelSchema=new db.Schema({
    hotelName:{
        type:String,
        required:true,
        default:""
    },region:{
        type:String,
        required:true,
        default:""
    },hotelPhone:{
        type:String,
        required:true,
        default:""
    },hotelEmail:{
        type:String,
        required:true,
        default:""
    },hotelResponsible:{
        type:String,
        required:true,
        default:""
    },stars:{
        type:Number,
        required:true,
        default:1
    },parking:{
        type:Boolean,
        required:true,
        default:false
    },wifi:{
        type:Boolean,
        required:true,
        default:false
    },
    seasons:{
        type:[seasonSchema],
        required:false,
        default:[]
    },
    LO:{
        type:accomodationSchema,
        required:true,
        default:{
            price:0,
            
        }
    },LPD:{
        type:accomodationSchema,
        required:true,
        default:{
            price:0,
            
        }
    },DP:{
        type:accomodationSchema,
        required:true,
        default:{
            price:0,
            
        }
    },PC:{
        type:accomodationSchema,
        required:true,
        default:{
            price:0,
            
        }
    },ALLIN:{
        type:accomodationSchema,
        required:true,
        default:{
            price:0,
            
        }
    },ALLINSOFT:{
        type:accomodationSchema,
        required:true,
        default:{
            price:0,
            
        }
    },DPP:{
        type:accomodationSchema,
        required:true,
        default:{
            price:0,
            
        }
    },PCP:{
        type:accomodationSchema,
        required:true,
        default:{
            price:0,
            
        }
    },
    LOStatus:{
        type:Boolean,
        required:true,
        default:false
    },
    SVMStatus:{
        type:Boolean,
        required:true,
        default:false
    },
    SVPStatus:{
        type:Boolean,
        required:true,
        default:false
    },
    SSStatus:{
        type:Boolean,
        required:true,
        default:false
    },
    SVM:{
        type:Number,
        required:true,
        default:0
    },
    SVP:{
        type:Number,
        required:true,
        default:0
    },
    SS:{
        type:Number,
        required:true,
        default:0
    },
    RPCStatus:{
        type:Boolean,
        required:true,
        default:false
    },
    RACStatus:{
        type:Boolean,
        required:true,
        default:false
    },
    RTFStatus:{
        type:Boolean,
        required:true,
        default:false
    },
    RSRStatus:{
        type:Boolean,
        required:true,
        default:false
    },
    RCStatus:{
        type:Boolean,
        required:true,
        default:false
    },
    RPC:{
        type:Number,
        required:true,
        default:0
    },
    RAC:{
        type:Number,
        required:true,
        default:0
    },
    RTF:{
        type:Number,
        required:true,
        default:0
    },
    RSR:{
        type:Number,
        required:true,
        default:0
    },
    RC:{
        type:Number,
        required:true,
        default:0
    },
    RCAges:{
        type:[Object],
        required:true,
        default:[]
    },
    LPDStatus:{
        type:Boolean,
        required:true,
        default:false
    },
    DPStatus:{
        type:Boolean,
        required:true,
        default:false
    },
    PCStatus:{
        type:Boolean,
        required:true,
        default:false
    },
    PCPStatus:{
        type:Boolean,
        required:true,
        default:false
    },
    DPPStatus:{
        type:Boolean,
        required:true,
        default:false
    },
    ALLINStatus:{
        type:Boolean,
        required:true,
        default:false
    },
    ALLINSOFTStatus:{
        type:Boolean,
        required:true,
        default:false
    },
    commission:{
        type:Number,
        required:true,
        default:1
    },
    mainImage:{
        type:String,
        required:true,
        default:""
    },
    firstImage:{
        type:String,
        required:true,
        default:""
    },
    additionalImages:{
        type:[String],
        required:true,
        default:[]
    },
    hotelLocation:{
        type:String,
        required:true,
        default:""
    },
    hotelDescription:{
        type:String,
        required:true,
        default:""
    },
    rooms:{
        type:Object,
        required:true,
        default:{
            singleRoom:{
                type:roomSchema,
                required:true,
                default:{
                    price:0,
                    units:0,
                    status:false
                }

            },
            
            doubleRoom:{
                type:roomSchema,
                required:true,
                default:{
                    price:0,
                    units:0,
                    status:false
                }

            },
            tripleRoom:{
                type:roomSchema,
                required:true,
                default:{
                    price:0,
                    units:0,
                    status:false
                }

            },
            QuadrupleRoom:{
                type:roomSchema,
                required:true,
                default:{
                    price:0,
                    units:0,
                    status:false
                }

            }
        },
        familyRoom:{
            type:roomSchema,
            required:true,
            default:{
                price:0,
                units:0,
                status:0
            }

        }
    },
    rating:{
        required:true,
        default:"5.0",
        type:"String"
    },
    raters:{
        required:true,
        default:1,
        type:Number

    },
    status:{
        type:Boolean,
        require:true,
        default:true
    }
})
const client=new db.model('Travelio Clients',clientSchema)
const hotels=new db.model('Travelio hotels',hotelSchema)
const bookings=new db.model('Travelio bookings',bookingSchema)
module.exports={client,hotels,bookings}